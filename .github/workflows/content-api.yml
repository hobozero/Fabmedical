name: content-api

# This workflow is triggered on push to the 'content-web' directory of the  master branch of the repository
on:
  push:
    branches:
    - master
    paths:
    - 'content-api/**'

  # Configure workflow to also support triggering manually
  workflow_dispatch:

# Environment variables are defined so that they can be used throughout the job definitions.
env:
  imageRepository: 'content-api'
<<<<<<< HEAD
<<<<<<< HEAD
  resourceGroupName: 'fabmedical-359664'
  containerRegistryName: 'acr359664'
  containerRegistry: 'acr359664.azurecr.io'
=======
  resourceGroupName: 'fabmedical-[DeploymentID]'
  containerRegistryName: 'acr[DeploymentID]'
  containerRegistry: 'acr[DeploymentID].azurecr.io'
>>>>>>> f919d24fa594d4eb8cc1854bb09e8bdd904e4b75
=======
  resourceGroupName: 'fabmedical-359664'
  containerRegistryName: 'acr359664'
  containerRegistry: 'acr359664.azurecr.io'
>>>>>>> 2c0b3a45b7bb398b1e18fa88f70f696efeb4cacd
  dockerfilePath: './content-api'
  tag: '${{ github.run_id  }}'

# Jobs define the actions that take place when code is pushed to the master branch
jobs:

  build-and-publish-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    # Checkout the repo
    - uses: actions/checkout@master

    - name: Build and push an image to container registry
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        path: ${{ env.dockerfilePath  }}
        dockerfile: '${{ env.dockerfilePath }}/Dockerfile'
        registry: ${{ env.containerRegistry }}
        repository: ${{ env.imageRepository }}
        tags: ${{ env.tag }},latest
